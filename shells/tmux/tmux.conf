# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

set -gw mode-keys vi

# Update window title
set -g set-titles on
set -g set-titles-string '#T - #I:#W'

# In tmux-sensible but here in case of older Tmux
set -g default-terminal "screen-256color"

# Start window numbers from 1
set -g base-index 1

# Time allowed between repeated motions
set -g repeat-time 750

# edit configuration
bind e new-window -n '~/.tmux.conf.local' "sh -c '\${EDITOR:-vim} ~/.tmux.conf ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

###############################################################################
###  Copy Mode  ###############################################################
###############################################################################

# enter copy mode
bind Enter copy-mode

bind p paste-buffer
# choose which buffer to paste from
bind P choose-buffer

bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection

bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

bind -t vi-copy C-u halfpage-up
bind -t vi-copy C-d halfpage-down

###############################################################################
###  Panes  ###################################################################
###############################################################################

# Bindings
bind s split-window -v
bind v split-window -h

# Preserve working directory
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize panes
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind -r C-j resize-pane -D 3
bind -r C-k resize-pane -U 3

###############################################################################
###  Windows  #################################################################
###############################################################################

# Switch between windows
bind -r C-p previous-window
bind -r C-n next-window

# Move windows
bind -r H swap-window -t -1
bind -r L swap-window -t +1

# Rename window
bind r command-prompt -p "New name for this window:" "rename-window '%%'"

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

##############################################################################
##  Sessions  ################################################################
##############################################################################

# Mostly handled by tmux-sessionist
# Useful commands are prefix+C to create session, prefix+g to switch
# prefix+X to kill

# Rename session
bind C-r command-prompt -p "New name for this session:" "rename-session '%%'"

##############################################################################
##  Statusbar  ###############################################################
##############################################################################

set -g status-justify centre #Windowlist
set -g status-left '[#S]'
set -g window-status-format " #I:#W "
set -g window-status-current-format " #[bold]#I:#W#[nobold] "
set -g status-right '#(whoami)@#(hostname)'

# Set utf-8 for the status bar
set -g status-utf8 on
# How often to update status bar
set -g status-interval 1

##############################################################################
##  Colours  ################################################################
##############################################################################

# default statusbar colors
set-option -g status-bg colour237
set-option -g status-fg colour231
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour231
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour231
set-window-option -g window-status-current-bg colour75

# pane border
set-option -g pane-border-fg colour75
set-option -g pane-active-border-fg colour231

# message text
set-option -g message-bg default
set-option -g message-fg default

##############################################################################
##  Plugins  #################################################################
##############################################################################

#Automatically install tpm if needed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'
# Sensible set of defaults
set -g @plugin 'tmux-plugins/tmux-sensible'
# Copy to system keyboard
set -g @plugin 'tmux-plugins/tmux-yank'
# Management of sessions
set -g @plugin 'tmux-plugins/tmux-sessionist'
# File tree
set -g @plugin 'tmux-plugins/tmux-sidebar'
# Search
set -g @plugin 'tmux-plugins/tmux-copycat'
# Open hightlighted file with o or edit with ctrl+o
set -g @plugin 'tmux-plugins/tmux-open'
# Automatic env saving
set -g @plugin 'tmux-plugins/tmux-continuum'

#Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#Local config
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'
