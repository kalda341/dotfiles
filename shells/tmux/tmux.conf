# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

set -gw mode-keys vi

# Update window title
set -g set-titles on
set -g set-titles-string '#T - #I:#W'

# In tmux-sensible but here in case of older Tmux
set -g default-terminal "screen-256color"

# Start window numbers from 1
set -g base-index 1

# Time allowed between repeated motions
set -g repeat-time 750

# Scrollback
set -g history-limit 50000

# edit configuration
bind e new-window -n '~/.tmux.conf.local' "sh -c '\${EDITOR:-vim} ~/.tmux.conf ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Reduce escape-time for Vim
set-option -sg escape-time 100

###############################################################################
###  Copy Mode  ###############################################################
###############################################################################

# enter copy mode
bind Enter copy-mode

bind p paste-buffer
# choose which buffer to paste from
bind P choose-buffer

bind-key -T vi-copy v send -X begin-selection
bind-key -T vi-copy C-v send -X rectangle-toggle
bind-key -T vi-copy y send -X copy-selection

bind-key -T vi-copy H send -X start-of-line
bind-key -T vi-copy L send -X end-of-line

bind-key -T vi-copy C-u send -X halfpage-up
bind-key -T vi-copy C-d send -X halfpage-down

#bind PageUp copy-mode -u

###############################################################################
###  Panes  ###################################################################
###############################################################################

# Bindings
bind s split-window -v
bind v split-window -h

# Preserve working directory
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize panes
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind -r C-j resize-pane -D 3
bind -r C-k resize-pane -U 3

###############################################################################
###  Windows  #################################################################
###############################################################################

# Switch between windows
bind -r C-p previous-window
bind -r C-n next-window

# Move windows
bind -r H swap-window -t -1
bind -r L swap-window -t +1

# Rename window
bind r command-prompt -p "New name for this window:" "rename-window '%%'"

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

##############################################################################
##  Sessions  ################################################################
##############################################################################

# Mostly handled by tmux-sessionist
# Useful commands are prefix+C to create session, prefix+g to switch
# prefix+X to kill

# Rename session
bind C-r command-prompt -p "New name for this session:" "rename-session '%%'"

##############################################################################
##  Statusbar  ###############################################################
##############################################################################

set -g status-justify centre #Windowlist
set -g status-left '[#S]'
set -g window-status-format " #I:#W "
set -g window-status-current-format " #[bold]#I:#W#[nobold] "
set -g status-right '#(whoami)@#(hostname)'

# Set utf-8 for the status bar
#set -g status-utf8 on
# How often to update status bar
set -g status-interval 1

##############################################################################
##  Colours  ################################################################
##############################################################################

# default statusbar colors
set-option -g status-style bg=colour237,fg=colour231

# default window title colors
set-window-option -g window-status-style fg=colour231,bg=default

# active window title colors
set-window-option -g window-status-current-style fg=colour231,bg=colour75

# pane border
set-option -g pane-border-style fg=colour75
set-option -g pane-active-border-style fg=colour231

# message text
set-option -g message-style fg=default,bg=default

##############################################################################
##  Plugins  #################################################################
##############################################################################

#Automatically install tpm if needed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'
# Sensible set of defaults
set -g @plugin 'tmux-plugins/tmux-sensible'
# Copy to system keyboard
set -g @plugin 'tmux-plugins/tmux-yank'
# Management of sessions
set -g @plugin 'tmux-plugins/tmux-sessionist'
# File tree
set -g @plugin 'tmux-plugins/tmux-sidebar'
# Search
set -g @plugin 'tmux-plugins/tmux-copycat'
# Open hightlighted file with o or edit with ctrl+o
set -g @plugin 'tmux-plugins/tmux-open'
# Automatic env saving
set -g @plugin 'tmux-plugins/tmux-continuum'

#Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#Local config
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'


#bind-key C-b send-prefix
#bind-key C-o rotate-window
#bind-key C-z suspend-client
#bind-key Space next-layout
#bind-key ! break-pane
#bind-key '"' split-window
#bind-key '#' list-buffers
#bind-key '$' command-prompt -I "#S" "rename-session '%%'"
#bind-key % split-window -h
#bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window
#bind-key "'" command-prompt -p index "select-window -t ':%%'"
#bind-key ( switch-client -p
#bind-key ) switch-client -n
#bind-key , command-prompt -I "#W" "rename-window '%%'"
#bind-key - delete-buffer
#bind-key . command-prompt "move-window -t '%%'"
#bind-key 0 select-window -t :0
#bind-key 1 select-window -t :1
#bind-key 2 select-window -t :2
#bind-key 3 select-window -t :3
#bind-key 4 select-window -t :4
#bind-key 5 select-window -t :5
#bind-key 6 select-window -t :6
#bind-key 7 select-window -t :7
#bind-key 8 select-window -t :8
#bind-key 9 select-window -t :9
#bind-key : command-prompt
#bind-key \; last-pane
#bind-key = choose-buffer
#bind-key ? list-keys
#bind-key D choose-client
#bind-key L switch-client -l
#bind-key [ copy-mode
#bind-key ] paste-buffer
#bind-key c new-window
#bind-key d detach-client
#bind-key f command-prompt "find-window '%%'"
#bind-key i display-message
#bind-key l last-window
#bind-key n next-window
#bind-key o select-pane -t :.+
#bind-key p previous-window
#bind-key q display-panes
#bind-key r refresh-client
#bind-key s choose-tree
#bind-key t clock-mode
#bind-key w choose-window
#bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
#bind-key z resize-pane -Z
#bind-key { swap-pane -U
#bind-key } swap-pane -D
#bind-key '~' show-messages
#bind-key PPage copy-mode -u
#bind-key -r Up select-pane -U
#bind-key -r Down select-pane -D
#bind-key -r Left select-pane -L
#bind-key -r Right select-pane -R
#bind-key M-1 select-layout even-horizontal
#bind-key M-2 select-layout even-vertical
#bind-key M-3 select-layout main-horizontal
#bind-key M-4 select-layout main-vertical
#bind-key M-5 select-layout tiled
#bind-key M-n next-window -a
#bind-key M-o rotate-window -D
#bind-key M-p previous-window -a
#bind-key -r M-Up resize-pane -U 5
#bind-key -r M-Down resize-pane -D 5
#bind-key -r M-Left resize-pane -L 5
#bind-key -r M-Right resize-pane -R 5
#bind-key -r C-Up resize-pane -U
#bind-key -r C-Down resize-pane -D
#bind-key -r C-Left resize-pane -L
#bind-key -r C-Right resize-pane -R
